pipeline {
    agent any
    tools {
        maven 'maven'
    }
    stages{
         stage("increment version") {
            steps {
               echo "incrementing app version.. "
               sh 'mvn build-helper:parse-version versions:set \
               -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion}
               versions:commit'
              def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
              def version = matcher[0][1]
              env.IMAGE_NAME = "$version-$BUILD_NUMBER"

            }
         }

         stage("build jar"){
            steps{
                script {

                    echo "building the application .."
                     sh 'mvn clean package'
                     //gv.buildJAr()
                }
                
            }
           
        }

        stage ("build image") {
            steps {
                script {
                     echo "building the docker image..."
                     withCredentials([usernamePassword(credentialsId: 'docker-hub-repo', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                          sh "docker build -t walidali123/my-repo:${IMAGE_NAME} ."
                          sh "docker login -u $USER -p $PASS  "
                          sh "docker push walidali123/my-repo:${IMAGE_NAME}"

    
}
                    //gv.buildimage()
                    
                }
            }
        }
         stage("deploy"){
            steps{
                script {
                    echo "deploying the application..."
                    //gv.deployapp()
                     
                }
                
            }
           
        }

        
           
        }
       
    }
   